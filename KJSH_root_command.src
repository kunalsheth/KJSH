
import java.io.File;
import java.io.IOException;

/**
 * Copyright 2016 Kunal Sheth
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

public class KJSH_command_0 implements Runnable {

    public void run() {
        System.out.println("Welcome to Kunal's Java SHell (KJSH)\nVersion: " + KJSH.getVersion());
    }

    public void help() {
        System.out.println("I'm too lazy to type out a man page. Sorry.");
    }

    public class KJSH {
        public static final String VERSION = "1.2 alpha";

        public static String getVersion() {
            return VERSION;
        }

        public static void clear() {
            for (int i = 0; i < 100; i++) System.out.println();
        }

        public static int runInShell(String command) throws IOException, InterruptedException {
            if (command == null || (command = command.trim()).equals("")) return 0;
            if (command.contains(";")) {
                int exitCode = 0, returnCode = 0;
                String[] subCommands = command.split(";");
                for (int i = 0; i < subCommands.length; i++)
                    if ((exitCode = runInShell(subCommands[i])) < returnCode) returnCode = exitCode;
                return returnCode;
            }
            ProcessBuilder processBuilder = new ProcessBuilder().inheritIO();
            processBuilder.command(command.split(" "));
            return processBuilder.start().waitFor();
        }
    }
}
